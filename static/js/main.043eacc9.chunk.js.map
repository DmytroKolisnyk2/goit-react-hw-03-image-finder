{"version":3,"sources":["components/ScrollTopArrow/ScrollTopArrow.module.css","components/SearchForm/SearchForm.jsx","components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/LoaderPart/LoaderPart.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ScrollTopArrow/ScrollTopArrow.jsx","services/apiService.js","App.jsx","index.js"],"names":["module","exports","SearchForm","formValue","onInputHandler","className","type","autoComplete","autoFocus","placeholder","onChange","value","Searchbar","state","query","target","setState","onSubmitHandler","event","preventDefault","props","onSubmit","this","Component","Button","onClick","ImageGalleryItem","url","description","src","alt","defaultProps","ImageGallery","photoData","children","setLargeImage","map","item","largeImageURL","tags","webformatURL","id","LoaderPart","foregroundColor","viewBox","speed","x","y","rx","ry","width","height","Loader","arrayOfLoaderParts","Array","keys","modalRef","document","querySelector","Modal","closeKeydownModal","code","closeOverlayModal","currentTarget","window","addEventListener","removeEventListener","createPortal","ScrollTopArrow","color","bgColor","borderRadius","scrollTo","top","behavior","styles","arrow","style","backgroundColor","fontSize","axios","defaults","baseURL","apiRequest","page","get","App","isLoading","showLoadMoreButton","error","largeImage","showModal","onClickLoadMore","prevState","findImages","a","then","data","hits","length","catch","finally","imgUrl","toggleModal","info","text","prevProps","scrollBy","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.043eacc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"ScrollTopArrow_arrow__1AwV-\"};","import React from 'react';\nimport './SearchForm.scss';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({formValue, onInputHandler}) => {\n  return (\n    <input\n      className=\"SearchForm-input\"\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search images and photos\"\n      onChange={onInputHandler}\n      value={formValue}\n    />\n  );\n}\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  formValue: PropTypes.string.isRequired,\n  onInputHandler: PropTypes.func.isRequired,\n}","import React, { Component } from \"react\";\nimport \"./Searchbar.scss\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport \"material-design-icons/iconfont/material-icons.css\";\nimport PropTypes from 'prop-types';\n\nclass Searchbar extends Component {\n  state = {\n    query: \"\",\n  };\n\n  onInputHandler = ({ target }) => {\n    this.setState({ query: target.value });\n  };\n\n  onSubmitHandler = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.query);\n  };\n  \n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.onSubmitHandler}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"material-icons\">search</span>\n          </button>\n          <SearchForm formValue={this.state.query} onInputHandler={this.onInputHandler} />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}","import React from \"react\";\nimport \"./Button.scss\";\nimport PropTypes from \"prop-types\";\n\nexport default function Button({ onClick }) {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ImageGalleryItem.scss\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ url, description, onClick }) => {\n  return (\n    <li onClick={onClick} className=\"gallery-item\">\n      <img src={url} alt={description} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.defaultProps = {\n  description: \"photo preview\",\n};\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport \"./ImageGallery.scss\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ photoData, children, setLargeImage }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {photoData.map((item) => (\n        <ImageGalleryItem\n          onClick={() => setLargeImage(item.largeImageURL, item.tags)}\n          key={item.id}\n          url={item.webformatURL}\n          description={item.tags}\n        />\n      ))}\n      {children}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  photoData: PropTypes.array.isRequired,\n  setLargeImage: PropTypes.func.isRequired,\n};\n","import React from 'react'\nimport ContentLoader from \"react-content-loader\";\n\n\nexport default function LoaderPart() {\n  return (\n    <ContentLoader\n      foregroundColor=\"#cac0c0\"\n      viewBox=\"0 0 720 520\"\n      className=\"LoaderPart\"\n      speed={1}\n    >\n      <rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"720\" height=\"520\" />\n    </ContentLoader>\n  );\n}\n","import React from \"react\";\nimport \"./Loader.scss\";\nimport LoaderPart from \"./LoaderPart/LoaderPart\";\n\nconst Loader = () => {\n  const arrayOfLoaderParts = [...Array(12).keys()];\n  return (\n    <>\n      {arrayOfLoaderParts.map((item) => (\n        <LoaderPart key={item} />\n      ))}\n    </>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport \"./Modal.scss\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst modalRef = document.querySelector(\"#root-modal\");\n\nexport default class Modal extends Component {\n  closeKeydownModal = (event) => event.code === \"Escape\" && this.props.onClick();\n  closeOverlayModal = (event) => event.target === event.currentTarget && this.props.onClick();\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.closeKeydownModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.closeKeydownModal);\n  }\n\n  render() {\n    return createPortal(\n      <div onClick={this.closeOverlayModal} className=\"Overlay\">\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRef\n    );\n  }\n}\n\nModal.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport styles from \"./ScrollTopArrow.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function ScrollTopArrow({ color, bgColor, borderRadius }) {\n  return (\n    <div\n      onClick={() =>\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\",\n        })\n      }\n      className={styles.arrow}\n      style={{\n        backgroundColor: bgColor,\n        borderRadius: borderRadius,\n      }}\n    >\n      <span style={{ color: color, fontSize: \"42px\" }} className=\"material-icons\">\n        expand_less\n      </span>\n    </div>\n  );\n}\n\nScrollTopArrow.defaultProps = {\n  color: \"#fff\",\n  bgColor: \"#333\",\n  borderRadius: \"50%\",\n};\n\nScrollTopArrow.propTypes = {\n  color: PropTypes.string,\n  bgColor: PropTypes.string,\n  borderRadius: PropTypes.string,\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst key = '23244571-e0b1f6062f2659059b6ad356b';\n\nexport const apiRequest = (query, page) => {\n  return axios.get(`/?image_type=photo&key=${key}&orientation=horizontal&q=${query}&page=${page}&per_page=12`);\n};","import React, { Component } from \"react\";\nimport { info } from \"@pnotify/core\";\n\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport Button from \"./components/Button/Button\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Loader from \"./components/Loader/Loader\";\nimport Modal from \"./components/Modal/Modal\";\nimport ScrollTopArrow from \"./components/ScrollTopArrow/ScrollTopArrow\";\n\nimport \"./styles/App.scss\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\nimport { apiRequest } from \"./services/apiService\";\n\nclass App extends Component {\n  state = {\n    isLoading: false,\n    photoData: [],\n    page: 1,\n    showLoadMoreButton: false,\n    query: \"\",\n    error: \"\",\n    largeImage: \"\",\n    showModal: false,\n    description: \"\",\n  };\n\n  componentDidMount() {\n    info({ text: \"Type your query and find photos\" });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.query !== prevState.query) {\n      this.findImages().then(() => window.scrollTo(0, 0));\n    }\n    if (this.state.page !== prevState.page && this.state.page !== 1) {\n      this.findImages().then(() =>\n        window.scrollBy({\n          top: 260,\n          behavior: \"smooth\",\n        })\n      );\n    }\n  }\n\n  onSubmit = (query) => {\n    this.setState({ query: query, error: \"\", page: 1, photoData: [] });\n  };\n\n  onClickLoadMore = () => {\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n  };\n\n  findImages = async () => {\n    const { page } = this.state;\n    this.setState({ isLoading: true, showLoadMoreButton: false });\n\n    apiRequest(this.state.query, page)\n      .then(({ data }) => {\n        this.setState((prevState) => ({\n          photoData: [...prevState.photoData, ...data.hits],\n          showLoadMoreButton: data.hits.length === 12 && true,\n          error: data.hits.length === 0 && \"Opps, nothing found\",\n        }));\n      })\n      .catch(() => this.setState({ error: \"Oops, something went wrong\" }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  setLargeImage = (imgUrl, description) => {\n    this.toggleModal();\n    this.setState({ largeImage: imgUrl, description: description });\n  };\n\n  toggleModal = () => this.setState((prevState) => ({ showModal: !prevState.showModal }));\n\n  render() {\n    const { error, photoData, showLoadMoreButton, showModal, isLoading, largeImage, description } =\n      this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        {error && <h2 className=\"errorMesage\">{error}</h2>}\n        {!error && (\n          <ImageGallery setLargeImage={this.setLargeImage} photoData={photoData}>\n            {isLoading && <Loader />}\n          </ImageGallery>\n        )}\n        {showLoadMoreButton && <Button onClick={this.onClickLoadMore} />}\n        {showModal && (\n          <Modal onClick={this.toggleModal}>\n            <img src={largeImage} alt={description} />\n          </Modal>\n        )}\n        <ScrollTopArrow borderRadius={\"50%\"} color={\"white\"} bgColor={\"#3f51b5\"} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}